Problem 1:

For the Geography problem from Assignment 1, answer the following questions,
assuming there are n words.

A. How many states are expanded for BFS in the worst case, in terms of n.

n^n-1

B. How many states are stored in BFS in the worst case, in terms of n.
C. Is BFS complete for this problem?
D .Same as part A for DFS.
E. Same as part B for DFS.
F. Same as part C for DFS.
G. Same as part A for Iterative Deepening.
H. Same as part B for Iterative Deepening.
I. Same as part C for Iterative Deepening.

-----------------------------------------------------------------------------
Problem 2:

Answer Parts A-I for PCP, assuming n dominoes.

------------------------------------------------------------------------------
Problem 3:

Consider a one-dimensional maze problem, which is represented by a list
telling you that if you are in a given position, then there are two possible
positions you can move to.  Consider the maze:

[ (1 (3 5)) (2 (3 6)) (3 (2 4)) (4 (2 3)) (5 (3 8))
  (6 (7 9)) (7 (4 8)) (8 (7 10)) (9 (10 11)) (10 (5 7)) ]
This says that if you are at position 1, then you can go to position 3 or 5.
If you are in position 2, then you can go to position 3 or 6, etc.
Starting at position 1, the object is to get to position 8.  Each move has
a cost of 1.  So the path cost is the number of edges on that path.

A.  Show the order the nodes are expanded in BFS, and show the resulting
tree.  Assume that you do not revisit a state you have already seen.
If you have a choice which node to visit next, you should choose
the node with the smallest value (for all parts of this question).

B.  Show the order the nodes are expanded in DFS, and show the resulting tree.
Assume you never revisit a state on the same path.

C.  Show the order the nodes are expanded in Iterative Deepening Search.
Assume that you never revisit a node on the same path.

D.  You will notice that a move can at most move you 4 spaces closer to
the goal.  Give an admissible heuristic based on that fact.

E.  Show the tree that would be constructed by the A* algorithm using the
heuristic in part D.  In this part the object is to get to position 11,
instead of position 8.  Label the tree with the f-value of each node.
Also list the order that the nodes are expanded.  Assume you never revisit
a node you have already seen.

------------------------------------------------------------------------------
Problem 4:

Consider the following two person game.  There are two piles of marbles.
Each person on his turn chooses one pile and takes as many marbles as he
wants out of that pile (but he must take at least one marble out of that
pile).  Suppose that you go first.  The object of the game is not to take
the last marble.  When somebody takes the last marble, the other person gets
as many points as the number of moves in the game.  For example, if I go first,
then my opponent goes, and then I go again and take the last marble, then
my opponent gets three points because I took the last marble and there
were three moves in the game.

Let (x y) represent the state with x marbles in one pile and y marbles in
the other.  For simplicity when you draw your tree, think of (x y) and (y x)
as the same state.

A.  Give the minimax tree for the example when there are originally two
marbles in each pile.   For both parts of this problem, when you have a
choice of what to do next you should prefer the state that leaves the
fewest total marbles.  If you have a choice among two states with the same
number of total marbles, choose the one whose largest pile is the smallest.

B.  Again consider the example where there are two marbles in each pile.
Give the tree produced by the alpha beta pruning algorithm and explain why
you pruned it wherever you pruned it.

------------------------------------------------------------
Problem 5:

Think of a solution to the Geography problem as a mapping from a word to
its position in the solved list of words.  For example, if the Geography problem
was {cat,toy,treat}, then the solution would be that cat has the value 1, toy has
the value 3, and treat has the value 2.

A. Given the above representation, suppose you were to solve Geography using
local search.  What would be the definition of state?  What would be a suitable
definition of neighbor?  What is a good objective function?

B. Given the above representation, suppose you were to solve Geography as a
CSP.  What would the variables be?  What would the domain be?  What are the constraints?